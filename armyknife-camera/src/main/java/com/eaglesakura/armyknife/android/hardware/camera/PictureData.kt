package com.eaglesakura.armyknife.android.hardware.camera

import android.graphics.Bitmap
import android.graphics.BitmapFactory
import android.os.Parcelable
import kotlinx.android.parcel.Parcelize
import java.util.Arrays

/**
 * Image Buffer for Camera.
 */
@Parcelize
data class PictureData(
    /**
     * Picture horizontal pixels.
     */
    val width: Int,

    /**
     * Picture vertical pixels.
     */
    val height: Int,
    /**
     * This buffer was generated by Camera API.
     * The Buffer formats are "Jpeg" or "DNG".
     */
    @Suppress("MemberVisibilityCanBePrivate")
    val buffer: ByteArray
) : Parcelable {

    init {
        if (width <= 0 || height <= 0) {
            throw IllegalArgumentException("required(width[$width] > 0 && height[$height]) > 0)")
        }
    }

    fun decodeImage(): Bitmap {
        return BitmapFactory.decodeByteArray(buffer, 0, buffer.size)!!
    }

    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as PictureData

        if (width != other.width) return false
        if (height != other.height) return false
        if (!Arrays.equals(buffer, other.buffer)) return false

        return true
    }

    override fun hashCode(): Int {
        var result = width
        result = 31 * result + height
        result = 31 * result + Arrays.hashCode(buffer)
        return result
    }
}
